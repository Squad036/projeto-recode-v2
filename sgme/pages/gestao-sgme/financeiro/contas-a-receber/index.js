import React, {useEffect, useState} from 'react';
import Link from "next/link";
import Head from "next/head";
import {http} from "@/utils/http";
import ReceitaItem from "@/components/ReceitaItem";
import Paginacao from "@/components/Paginacao";

function Index() {
    const [clientes, setClientes] = useState({});
    const [receitas, setReceitas] = useState([{
        cliente_id: '',
        valor: 0,
        data_vencimento: '',
        forma_pagamento: '',
        status: '',
    }]);

    const [page, setPage] = useState(0);
    const [totalPages, setTotalPages] = useState(1);


    useEffect(() => {

        http
            .get(`/receitas?page=${page}&size=10`, {params: {page}})
            .then((response) => {
                setReceitas(response.data.content)
                setTotalPages(response.data.totalPages)
            })
            .catch((error) => {
                console.error("Erro" + error.response);
            });
    }, [page]);

    useEffect(() => {
        http.get('/clientesLista')
            .then((response) => {
                const clientesMap = response.data.reduce((map, cliente) => {
                    map[cliente.id] = cliente.nome;
                    return map;
                }, {});
                setClientes(clientesMap)
            })
            .then((error) => {
                console.error("Erro ao buscar cliente", error)
            }, [])

    })


    return (
        <>
            <Head>
                <title>SGME - Lista de contas a receber</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>

            </Head>
            <main className="container">
                <div className="container d-sm-flex flex-row justify-content-between mb-3">
                    <h3>Contas a Receber</h3>
                    <Link href="/gestao-sgme/financeiro/contas-a-receber/cadastro" className="btn btn-success">Novo
                        Receita</Link>
                </div>

                <table className="table">
                    <thead>
                    <tr className="border border-2 border-warning">
                        <th scope="col">Cliente</th>
                        <th scope="col">Valor</th>
                        <th scope="col">Ações</th>

                    </tr>
                    </thead>
                    <tbody>

                    {receitas && receitas.length > 0 ?(
                        receitas.map(despesa => (
                            <ReceitaItem key={despesa.id} despesa={despesa} clientes={clientes}/>
                        ))
                    ) : (
                        <tr>
                            <td colSpan="6">Nenhuma despesa encontrada.</td>
                        </tr>
                        )}

                    </tbody>
                </table>

                <Paginacao  page={page} totalPages={totalPages} setPage={setPage}/>

            </main>
        </>

    );
}

export default Index;