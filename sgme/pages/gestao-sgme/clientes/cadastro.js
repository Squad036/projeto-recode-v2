import React, {useState} from 'react';
import Head from "next/head";
import {useForm} from "react-hook-form";
import axios from "axios";
import {useRouter} from "next/router";
import {http} from "@/utils/http";
import ButtonFechar from "@/components/ButtonFechar";


function Cadastro(props) {
    const [errorApi, setErroApi] = useState(["OK"])
    const [resultErro, setResultErro] = useState(["OK"])
    const [status, setStatus] = useState([false])

    const router = useRouter();
    const {
        register,
        handleSubmit,
        formState: {errors},
        reset
    } = useForm();

    const onSubmit = async (data) => {

        try {
            await http.post('/clientes', data)
                .then((response) => {
                    setStatus(true)
                    reset()
                    router.push('/gestao-sgme/clientes')
                })
        } catch (error) {
            if (axios.isAxiosError(error) && error.response) {
                setErroApi(error.response.data.message)
                console.error('Erro na resposta da API', error.response.data)
            } else {
                console.error('Erro ao enviar dados para a API', error)
            }
        }
        setResultErro(errorApi.includes("Duplicate entry"));
    }



    return (
        <>
            <Head>
                <title>SGME - Cadastrando Clientes</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <div className="container d-flex align-items-center justify-content-center mt-5">


                <form className="form-control p-5">

                    <ButtonFechar url="/gestao-sgme"/>

                    <h3 className="mb-4">Novo cliente</h3>
                    <div className="d-sm-flex flex-column  me-3">
                        <label htmlFor="valor">Nome Completo: </label>
                        <input placeholder="Nome"
                               className="form-control"
                               {...register("nome", {required: true})}
                        />
                        {errors?.cpf?.type === "required" && (
                            <p className="alert alert-danger mt-3">CPF obrigatorio!</p>
                        )}
                    </div>

                    <div className="d-sm-flex justify-content-between mb-3">
                        <div className="d-flex flex-column w-100 me-3">
                            <label htmlFor="valor">CPF: </label>
                            <input placeholder="Cpf"
                                   className="form-control"
                                   {...register("cpf", {required: true})}
                            />
                            {errors?.cpf?.type === "required" && (
                                <p className="alert alert-danger mt-3">CPF obrigatorio!</p>
                            )}

                            {resultErro === true ? (
                                <p className="text-danger fw-bold">CPF j√° cadastrado</p>
                            ) : ("")}
                        </div>

                        <div className="d-flex flex-column w-100  me-3">
                            <label htmlFor="data_vencimento">Data Nascimento: </label>
                            <input type="date"
                                   className="form-control"
                                   {...register("data_nascimento", {required: true})}
                            />
                            {errors?.data_nascimento?.type === "required" && (
                                <p className="alert alert-danger mt-3">Data de nascimento e obrigatorio!</p>
                            )}

                        </div>
                        <div className="d-flex flex-column w-100 mb-3">
                            <label htmlFor="data_vencimento">Telefone</label>
                            <input type="text"
                                   placeholder="Telefone/Celular"
                                   className="form-control"
                                   {...register("telefone",)}
                            />

                        </div>


                    </div>


                    <button className="btn btn-warning pe-5 ps-5 me-3" onClick={(e) => {
                        e.preventDefault();
                        handleSubmit(onSubmit)();
                    }}>SALVAR
                    </button>

                </form>
            </div>
        </>
    );
}

export default Cadastro;